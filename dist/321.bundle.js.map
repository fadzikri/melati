{"version":3,"file":"321.bundle.js","mappings":"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","sources":["webpack://melati/./node_modules/axios/lib/helpers/validator.js","webpack://melati/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","webpack://melati/./node_modules/axios/lib/platform/browser/classes/FormData.js","webpack://melati/./node_modules/axios/lib/platform/browser/index.js","webpack://melati/./node_modules/axios/lib/utils.js"],"sourcesContent":["'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default FormData;\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  const pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self;\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[_-\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  toJSONObject\n};\n"],"names":["validators","forEach","type","i","thing","deprecatedWarnings","transitional","validator","version","message","formatMessage","opt","desc","value","opts","console","warn","assertOptions","options","schema","allowUnknown","keys","Object","length","result","undefined","URLSearchParams","AxiosURLSearchParams","isStandardBrowserEnv","product","navigator","window","document","isStandardBrowserWebWorkerEnv","WorkerGlobalScope","self","importScripts","isBrowser","classes","FormData","Blob","protocols","toString","prototype","getPrototypeOf","kindOf","cache","create","str","call","slice","toLowerCase","kindOfTest","typeOfTest","isArray","Array","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","val","Symbol","toStringTag","iterator","isDate","isFile","isBlob","isFileList","isURLSearchParams","obj","fn","allOwnKeys","l","getOwnPropertyNames","len","key","findKey","_key","_global","global","isContextDefined","context","isTypedArray","TypedArray","Uint8Array","isHTMLForm","hasOwnProperty","prop","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","name","defineProperties","isBuffer","constructor","isFormData","pattern","isArrayBufferView","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","this","assignValue","targetKey","arguments","extend","a","b","thisArg","trim","replace","stripBOM","content","charCodeAt","inherits","superConstructor","props","defineProperty","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","endsWith","searchString","position","String","lastIndex","indexOf","toArray","arr","forEachEntry","next","done","pair","matchAll","regExp","matches","exec","push","hasOwnProp","freezeMethods","enumerable","writable","set","Error","toObjectSet","arrayOrString","delimiter","define","split","toCamelCase","m","p1","p2","toUpperCase","noop","toFiniteNumber","defaultValue","Number","isFinite","toJSONObject","stack","visit","source","target","reducedValue"],"sourceRoot":""}